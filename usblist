#!/bin/bash

#script for building list of usb mounted devices

# (a) create fifo pipe
PIPE=$(mktemp -u --tmpdir ${0##*/}.XXXXXXXX)
mkfifo $PIPE

# (b) attach a filedescriptor to this pipe
exec 3<> $PIPE

# arrays

declare -a partitions
declare -a usblist
declare -a device
declare -a mountpoints

buildmenu() {

#get partition info

N=0
for i in $(df --local --output=source |grep /dev/) ; do
   
      partitions[$N]="$i"
#      echo "$N = $i"     #to confirm the entry
       
  let "N= $N + 1"
done


# debug area to check variables
count=$(echo ${#partitions[@]})
#echo $count

#i="0"
#while [ "$i" -lt "$count" ]
#do
#	echo "${partitions[$i]}"
#	i=$[$i+1]
#done

# check usb status for each device

i="0"
N=$i
while [ "$i" -lt "$count" ]
do
	device[$i]=$(echo "${partitions[$i]}"|cut -d "/" -f3 | cut -c 1-3)
#	echo "${device[$i]}"
	usbcheck=$(udevadm info --query=property --path=/sys/block/${device[$i]} | grep ID_BUS=usb |cut -d "=" -f2)
#       echo $usbcheck
	
	if [ "$usbcheck" = "" ]; then
		N=$[$N-1]
	else
	if [ "$usbcheck" = "usb" ]; then
		usblist[$N]=${partitions[$i]}
	fi
	fi
	N=$[$N+1]
	i=$[$i+1]
done

# generate mountpoint list

count2=$(echo ${#usblist[@]})
i="0"
while [ "$i" -lt "$count2" ]
do
#	echo "${usblist[$i]}"
	mountpoints[i]=$(df ${usblist[$i]} --output=target |grep /)
#	echo "${mountpoints[$i]}"
	i=$[$i+1]
done

#build yad right click menu

i="0"

while [ "$i" -lt "$count2" ]
do	
	#echo "${mountpoints[$i]}"
	menu1=$(echo "${mountpoints[$i]}!bash -c 'unmount ${mountpoints[$i]}'!drive-removable-media",$menu1)
	#echo $menu1
	i=$[$i+1]
done
menu2=$(echo "menu:${menu1}Help!mx-viewer mepiscommunity.org!gtk-help,Quit!quit!gtk-cancel")
echo $menu2
echo $menu2 >&3
}

unmount() {

#echo $1
umount $1
buildmenu
}

export -f unmount
export -f buildmenu
buildmenu
yad --notification --listen --image=drive-removable-media --separator=","<&3 &



